// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: mail_event.sql

package sqlc

import (
	"context"
)

const mailEventCreateBatch = `-- name: MailEventCreateBatch :exec
INSERT INTO mail_event (mail_id, event_id)
VALUES (
  UNNEST($1::int[]),
  UNNEST($2::int[])
)
`

type MailEventCreateBatchParams struct {
	Column1 []int32
	Column2 []int32
}

func (q *Queries) MailEventCreateBatch(ctx context.Context, arg MailEventCreateBatchParams) error {
	_, err := q.db.Exec(ctx, mailEventCreateBatch, arg.Column1, arg.Column2)
	return err
}

const mailEventDeleteByMail = `-- name: MailEventDeleteByMail :exec
DELETE FROM mail_event
WHERE mail_id = $1
`

func (q *Queries) MailEventDeleteByMail(ctx context.Context, mailID int32) error {
	_, err := q.db.Exec(ctx, mailEventDeleteByMail, mailID)
	return err
}
