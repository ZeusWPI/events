// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: organizer.sql

package sqlc

import (
	"context"
)

const organizerCreate = `-- name: OrganizerCreate :one
INSERT INTO organizer (event_id, board_id)
VALUES ($1, $2)
RETURNING id
`

type OrganizerCreateParams struct {
	EventID int32
	BoardID int32
}

func (q *Queries) OrganizerCreate(ctx context.Context, arg OrganizerCreateParams) (int32, error) {
	row := q.db.QueryRow(ctx, organizerCreate, arg.EventID, arg.BoardID)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const organizerDeleteByBoardEvent = `-- name: OrganizerDeleteByBoardEvent :exec
DELETE FROM organizer 
WHERE board_id = $1 AND event_id = $2
`

type OrganizerDeleteByBoardEventParams struct {
	BoardID int32
	EventID int32
}

func (q *Queries) OrganizerDeleteByBoardEvent(ctx context.Context, arg OrganizerDeleteByBoardEventParams) error {
	_, err := q.db.Exec(ctx, organizerDeleteByBoardEvent, arg.BoardID, arg.EventID)
	return err
}
