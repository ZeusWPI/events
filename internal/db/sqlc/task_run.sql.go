// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: task_run.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const taskRunCreate = `-- name: TaskRunCreate :one
INSERT INTO task_run (task_uid, run_at, result, error, duration)
VALUES ($1, $2, $3, $4, $5)
RETURNING id
`

type TaskRunCreateParams struct {
	TaskUid  string
	RunAt    pgtype.Timestamptz
	Result   TaskResult
	Error    pgtype.Text
	Duration int64
}

func (q *Queries) TaskRunCreate(ctx context.Context, arg TaskRunCreateParams) (int32, error) {
	row := q.db.QueryRow(ctx, taskRunCreate,
		arg.TaskUid,
		arg.RunAt,
		arg.Result,
		arg.Error,
		arg.Duration,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const taskRunResolve = `-- name: TaskRunResolve :exec
UPDATE task_run
SET result = 'resolved'
WHERE id = $1
`

func (q *Queries) TaskRunResolve(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, taskRunResolve, id)
	return err
}
